plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kr.go'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// implementation 'org.springframework.ldap:spring-ldap-core'
	// implementation 'org.springframework.security:spring-security-ldap'
	// implementation 'com.unboundid:unboundid-ldapsdk'
	
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.postgresql:postgresql:42.7.2'
	
	// Swagger (Springdoc OpenAPI)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// def frontendDir = "$projectDir/frontend"

// sourceSets {
// 	main {
// 		resources { srcDirs = ["$projectDir/src/main/resources"]
// 		}
// 	}
// }

// processResources { dependsOn "copyReactBuildFiles" }

// task installReact(type: Exec) {
// 	workingDir "$frontendDir"
// 	inputs.dir "$frontendDir"
// 	group = BasePlugin.BUILD_GROUP
// 	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
// 		commandLine "npm.cmd", "audit", "fix"
// 		commandLine 'npm.cmd', 'install' }
// 	else {
// 		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
// 	}
// }

// task buildReact(type: Exec) {
// 	dependsOn "installReact"
// 	workingDir "$frontendDir"
// 	inputs.dir "$frontendDir"
// 	group = BasePlugin.BUILD_GROUP
// 	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
// 		commandLine "npm.cmd", "run-script", "build"
// 	} else {
// 		commandLine "npm", "run-script", "build"
// 	}
// }

// task copyReactBuildFiles(type: Copy) {
// 	dependsOn "buildReact"
// 	from "$frontendDir/build"
// 	into "$projectDir/src/main/resources/static"
// }